import React from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { clearAll } from '../slices/QuestionSlice';
import { QuestionItems } from '../helpers/QuestionItems';
import { useNavigate } from 'react-router';
import Result from '../components/FinalResult/Result';
import carpetResult from '../assets/images/carpetResult.jpg';
import ReturnPage from '../components/ReturnPage';
import CanvasImage from '../components/CanvasImage';

const FinalScreen = () => {
  const navigate = useNavigate();
  const dispatch = useDispatch();
  const result = useSelector((state) => state.question.selectedQuestions);
  const stepQuestion = useSelector((state) => state.question.stepQuestion);

  React.useEffect(() => {
    console.log(result);
  }, []);

  const onReloadBtn = () => {
    navigate('/question');
    dispatch(clearAll());
  };

  const onReturnBtn = () => {
    navigate('/');
  };

  return (
    <div className="pt-24">
      <div className="grid h-full justify-items-center">
        {stepQuestion !== QuestionItems.length ? (
          <div>
            <ReturnPage />
            <div className="pt-20 text-center font-bold text-6xl tracking-widest">
              –í—ã –Ω–µ –ø—Ä–æ—à–ª–∏ —Ç–µ—Å—Ç!
            </div>
          </div>
        ) : (
          <div className="grid h-full justify-items-center">
            <CanvasImage />
            {/* <img className="w-4/6" src={carpetResult} alt="carpet result" /> */}
            <div className="font-bold text-2xl pt-5">
              –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —É—Å–ø–µ—à–Ω—ã–º –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ–º —Ç–µ—Å—Ç–∞!!!üéâüéâüéâüéâ
            </div>
            <Result />
            <p className="font-medium text-xl text-justify py-5 mx-28">
              –ò—Å–ø–æ–ª—å–∑—É—è —Ä–∞–∑–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥–∏–∫–∏ –º–æ–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç
              –ª–∏—á–Ω–æ—Å—Ç–∏ —á–µ–ª–æ–≤–µ–∫–∞, –¥–∞–∂–µ –Ω–µ –∑–Ω–∞—è –µ–≥–æ. –¢–∞–∫–∏–µ –ø–æ—Ä—Ç—Ä–µ—Ç—ã –ª–∏—á–Ω–æ—Å—Ç–∏ —á–∞—Å—Ç–æ
              –∏—Å–ø–æ–ª—å–∑—É—é—Ç –ø—Ä–∏ –ø—Ä–∏–µ–º–µ –Ω–∞ —Ä–∞–±–æ—Ç—É, –¥–∞–∂–µ –≤ –±—Ä–∞—á–Ω—ã—Ö –∞–≥–µ–Ω—Å—Ç–≤–∞—Ö –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –ø–∞—Ä—ã.
              –ò—Å—Å–ª–µ–¥—É—é—Ç—Å—è –æ–±—ã—á–Ω–æ: –ª–∏—á–Ω–æ—Å—Ç–Ω–∞—è —Å—Ñ–µ—Ä–∞ ‚Äî –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞,
              –∫–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω–∞—è —Å—Ñ–µ—Ä–∞, –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è. –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è —Å–∫–ª–æ–Ω–Ω–æ—Å—Ç–∏ –∫ —Ç–æ–π –∏–ª–∏
              –∏–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –≤–∏–¥—ã –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –∏ —Ç.–¥. –ù–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–Ω–æ
              —Å–¥–µ–ª–∞—Ç—å –æ–±—â–µ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ –æ —á–µ–ª–æ–≤–µ–∫–µ –∏ –¥–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.
            </p>
            <div className="flex my-5">
              <div className="mr-5">
                <button
                  className="w-52 h-12 bg-green-400 transition duration-500 cursor-pointer rounded-lg focus:ring-2  hover:bg-green-700 focus:ring-opacity-50 ring-inset"
                  onClick={() => onReloadBtn()}
                >
                  –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç —Å–Ω–∞—á–∞–ª–∞
                </button>
              </div>
              <div>
                <button
                  className="w-52 h-12 bg-green-400 transition duration-500 cursor-pointer rounded-lg focus:ring-2  hover:bg-green-700 focus:ring-opacity-50 ring-inset"
                  onClick={() => onReturnBtn()}
                >
                  –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
                </button>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default FinalScreen;
